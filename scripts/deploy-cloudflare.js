const { execSync } = require('child_process')
const fs = require('fs')
const path = require('path')

console.log('üöÄ D√©ploiement sur Cloudflare D1...')

// 1. G√©n√©rer le client Prisma
console.log('üì¶ G√©n√©ration du client Prisma...')
execSync('npx prisma generate', { stdio: 'inherit' })

// 2. Appliquer les migrations √† Cloudflare D1
console.log('üóÑÔ∏è Application des migrations √† Cloudflare D1...')
try {
  execSync(`npx wrangler d1 execute ${process.env.CLOUDFLARE_DATABASE_ID} --file=./scripts/cloudflare-migration.sql`, { 
    stdio: 'inherit',
    env: { ...process.env }
  })
  console.log('‚úÖ Migrations appliqu√©es avec succ√®s')
} catch (error) {
  console.error('‚ùå Erreur lors de l\'application des migrations:', error.message)
  process.exit(1)
}

// 3. Ins√©rer les donn√©es de test
console.log('üå± Insertion des donn√©es de test...')
try {
  execSync('npm run db:seed', { stdio: 'inherit' })
  console.log('‚úÖ Donn√©es de test ins√©r√©es')
} catch (error) {
  console.error('‚ùå Erreur lors de l\'insertion des donn√©es:', error.message)
  process.exit(1)
}

console.log('üéâ D√©ploiement Cloudflare D1 termin√© avec succ√®s!')
console.log('üìù N\'oubliez pas de configurer les variables d\'environnement dans Vercel:')
console.log('   - CLOUDFLARE_ACCOUNT_ID')
console.log('   - CLOUDFLARE_DATABASE_ID') 
console.log('   - CLOUDFLARE_API_TOKEN')
console.log('   - CLOUDFLARE_R2_ACCESS_KEY_ID')
console.log('   - CLOUDFLARE_R2_SECRET_ACCESS_KEY')
console.log('   - CLOUDFLARE_R2_BUCKET_NAME')
console.log('   - CLOUDFLARE_R2_PUBLIC_URL')